#
# Laserswald's kakrc.
#
echo -debug "starting kakrc"

try %{ source %val{config}/plugins.kak }
try %{ source %val{config}/visual.kak }
try %{ source %val{config}/command.kak }
try %{ source %val{config}/mappings.kak }
try %{ source %val{config}/options.kak }

# Looks.

colorscheme chameleon

# Custom faces.

set-face global Column black,white+r

add-highlighter global/ number-lines -relative -separator ' | ' -hlcursor
add-highlighter global/ wrap
add-highlighter global/ show-matching
add-highlighter global/ column 80 Column

# Plugins.
# 

require-module goto-definition
require-module tmux-repl

echo -debug "loaded modules"

# General options.

set-option global grepcmd 'ag --ignore=tags --ignore=.git* --column'

# Alignment

set-option global tabstop 4
set-option global indentwidth 0
set-option global aligntab false

# Mappings

# User mappings
map global user C \
	-docstring "Comment the selection, block style" \
	<esc>:comment-block<ret>

map global user c \
	-docstring "Comment the selection" \
	<esc>:comment-line<ret>

map global user d \
	-docstring "Delete this buffer." \
	<esc>:db<ret>

map global user m \
	-docstring "Make the current project" \
	<esc>:make<ret>

map global user R \
	-docstring "Load your kakrc" \
	<esc>:source<space>~/.config/kak/kakrc<ret>

map global user s \
	-docstring "Send selection to repl window" \
	<esc>:send-text<ret>

map global user w \
	-docstring "Write the file and add the changes to version control" \
	<esc>:write<ret>:git<space>add<ret>

map global user , \
	-docstring "Open fuzzy finder mode" \
	<esc>:fzf-mode<ret>


# Go to mappings
map global goto b \
	-docstring "Another buffer" \
	<esc>:buffer<space>

map global goto d \
	-docstring "Symbol definition" \
	<esc><a-i>w:jump-to-definition<ret>

map global goto K \
	-docstring "Your kakrc" \
	<esc>:edit!<space>~/.config/kak/kakrc<ret>

map global goto n \
	-docstring "Next mention in buffer" \
	<esc><a-i>w*n<ret>

map global goto u \
	-docstring "References to symbol" \
	<esc>:find-references<ret>

map global goto x \
	-docstring "References to symbol" \
	<esc>:cross-reference<ret>


# Fancy modeline

# set global modelinefmt %{
#	 %val{bufname} {StatusLineValue}(%sh{git rev-parse --abbrev-ref HEAD 2> /dev/null}){StatusLine} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} - %val{client}@[%val{session}]
# }

# Styles and hooks for all windows.

hook global WinCreate .* %{
	modeline-parse
	ctags-enable-autoinfo
	try %{ editorconfig-load }
	git show-diff
	hook -group tabs-to-spaces buffer InsertChar \t %{ try %{
		execute-keys -draft h %opt{indentwidth}@
	} }
	auto-pairs-enable
}

hook global BufWritePost .* %{
	git update-diff
	ctags-update-tags
}

hook global ClientCreate .* %{
	setup-jump-client
}

## Filetype-specific hooks

hook global BufCreate .*\.js4$ %{
	set-option buffer filetype javascript
}

hook global WinSetOption filetype=kak %{
	map buffer user s <esc>:source<space>%reg{%}<ret> -docstring "Source this kak file"
}

hook global WinSetOption filetype=makefile %{
	remove-hooks buffer tabs-to-spaces
}

hook global WinSetOption filetype=zig %{
	set buffer indentwidth 4
	hook -group tabs-to-spaces buffer InsertChar \t %{
            	try %{
        		execute-keys -draft h %opt{indentwidth}@
        	}
	}
}

hook global WinSetOption filetype=php %{
	remove-hooks buffer tabs-to-spaces
	define-command -override phpunit-this-file %{
		set-option buffer makecmd "vendor/bin/phpunit %reg{%}"
	}
}

hook global WinSetOption filetype=scheme %{
    set-option buffer indentwidth 2
}

# Language server protocol support.
try %{
	evaluate-commands %sh{ kak-lsp --kakoune -s $kak_session }
	lsp-start
	hook global KakEnd .* %{ lsp-exit }
	hook global WinSetOption filetype=php %{ lsp-enable-window }
}

# Local kakrc sourcing for custom project commands and tools
try %{ source .kakrc.local }

