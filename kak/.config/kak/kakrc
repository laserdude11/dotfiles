#
# Laserswald's kakrc.
#
echo -debug "starting kakrc"

source "%val{config}/plugins.kak"
source "%val{config}/commands.kak"
source "%val{config}/visual.kak"
source "%val{config}/mappings.kak"

try %{ source %val{config}/options.kak }

# set-face global Column black,white+rb
# add-highlighter global/ column 80 Column

require-module goto-definition

try %{
    require-module tmux-repl
}

echo -debug "loaded modules"

# General options.

set-option global grepcmd 'ag --ignore=tags --ignore=.git* --column'

# Alignment

set-option global tabstop 4
set-option global indentwidth 0
set-option global aligntab false

# Styles and hooks for all windows.
hook global WinCreate .* %{
	modeline-parse
	ctags-enable-autoinfo
	try %{ editorconfig-load }
	git show-diff
	hook -group tabs-to-spaces buffer InsertChar \t %{ try %{
		execute-keys -draft h %opt{indentwidth}@
	} }
	auto-pairs-enable
}

hook global BufWritePost .* %{
	git update-diff
	ctags-update-tags
}

hook global ClientCreate .* %{
	setup-jump-client
}

## Filetype-specific hooks

hook global BufCreate .*\.js4$ %{
	set-option buffer filetype javascript
}

hook global WinSetOption filetype=c %{
	add-highlighter buffer/enum_struct regex '\b(struct\|enum) \(\w+\)\b' 2:type
}

hook global WinSetOption filetype=kak %{
	map buffer user s \
        -docstring "Source this kak file" \
        <esc>:source<space>%reg{%}<ret>
}

hook global WinSetOption filetype=makefile %{
	remove-hooks buffer tabs-to-spaces
}

hook global WinSetOption filetype=zig %{
	set buffer indentwidth 4
	hook -group tabs-to-spaces buffer InsertChar \t %{
        try %{
            execute-keys -draft h %opt{indentwidth}@
        }
	}
}

hook global WinSetOption filetype=(scheme|lisp|clojure|fennel) %{
    set-option buffer indentwidth 2
    map -docstring "Send selection to repl window" buffer user s <esc>:send-text<ret>       
    map -docstring "Send current paragraph to repl window" buffer user S <esc><a-i>p:send-text<ret> 
}

hook global WinSetOption filetype=php %{
	remove-hooks buffer tabs-to-spaces
	define-command -override phpunit-this-file %{
		set-option buffer makecmd "vendor/bin/phpunit %reg{%}"
	}
}

## Commands.

define-command -hidden setup-jump-client %{
	evaluate-commands %sh{
		if ! (echo "$kak_client_list" | grep -q 'jump') ; then
			printf %s\\n "rename-client jump"
		fi
		if ! [ "$kak_opt_jumpclient" ] ; then
			printf %s\\n "set-option global jumpclient jump"
		fi
	}
}

define-command cqlout-hl %~
    addhl buffer/start regex '([a-zA-Z]+): evaluating...' 1:bright-magenta,default
    addhl buffer/return regex '([a-zA-Z]+) (-->) ([^{\n]+)' 1:magenta,default 2:yellow,default 3:green,default
    addhl buffer/returnexpr regex '\(\d+\) ([a-zA-Z0-9 ]+) (-->) ([^{\n]+)' 1:cyan,default 2:yellow,default 3:green,default
    addhl buffer/expressionref regex '\(\d+\) ([a-zA-Z0-9 ]+):' 1:bright-cyan,default
    addhl buffer/true regex 'TRUE' 0:green,default
    addhl buffer/false regex 'FALSE' 0:red,default
    addhl buffer/null regex 'NULL' 0:bright-red,default
~

define-command git-merge-left %{
	execute-keys "<a-/><<<<<<<?=======<a-x>d/>>>>>>>xd"
}

define-command git-merge-right %{
	execute-keys "<a-/><<<<<<<?=======<a-x>d/>>>>>>>xd"
}

# Language server protocol support.
try %{
	evaluate-commands %sh{ kak-lsp --kakoune -s $kak_session }
	lsp-start
	hook global KakEnd .* %{ lsp-exit }
	hook global WinSetOption filetype=php %{ lsp-enable-window }
}

# Local kakrc sourcing for custom project commands and tools
try %{ source .kakrc.local }

