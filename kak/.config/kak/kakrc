
set global tabstop 4
set global indentwidth 4
set global aligntab false
set global termcmd "st -e sh -c"

# Mappings

# User mappings
map global user w <esc>:write<ret>:git<space>add<ret>         -docstring "Write the file and add the changes to version control"
map global user s <esc>:send-text<ret>                        -docstring "Send selection to repl window"
map global user c <esc>:comment-line<ret>                     -docstring "Comment the selection"
map global user R <esc>:source<space>~/.config/kak/kakrc<ret> -docstring "Load your kakrc"

# Go to mappings
map global goto b <esc>:buffer<space>                        -docstring "Another buffer"
map global goto K <esc>:edit!<space>~/.config/kak/kakrc<ret> -docstring "Your kakrc"
map global goto d <esc><a-i>w:ctags-search<ret>              -docstring "tag definition"
map global goto n <esc><a-i>w*n<ret>                         -docstring "Next mention"
map global goto u <esc><a-i>w:grep<space><c-r>.<ret>               -docstring "Grep for usage"

# Fancy modeline
set global modelinefmt %{
	 %val{bufname} {StatusLineValue}(%sh{git rev-parse --abbrev-ref HEAD 2> /dev/null}){StatusLine} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} - %val{client}@[%val{session}]
}

# Styles and hooks for all windows.
add-highlighter global/ number-lines -relative -separator ' | ' -hlcursor
add-highlighter global/ wrap
add-highlighter global/ show-matching

hook global WinCreate .* %{
    modeline-parse
    ctags-enable-autoinfo
    git show-diff
    hook -group tabs-to-spaces buffer InsertChar \t %{ try %{
        execute-keys -draft h %opt{indentwidth}@
    } }
}

hook global WinSetOption filetype=makefile %{
    remove-hooks buffer tabs-to-spaces
}

hook global BufWritePost .* %{
    git update-diff
   	ctags-update-tags
}

hook -group autocomplete global WinSetOption filetype=go %{ go-enable-autocomplete }
hook -group autocomplete global WinSetOption filetype=python %{ jedi-enable-autocomplete }
hook -group autocomplete global WinSetOption filetype=rust %{ racer-enable-autocomplete }

# I prefer to use my main window as my jump client.
define-command integrated %{
    rename-client main
	set-option global jumpclient main
	new rename-client tools
	set-option global toolsclient tools
}

hook global BufCreate .*\.js4$ %{
	set-option buffer filetype javascript
}

colorscheme default

try %{ source .kakrc.local }
