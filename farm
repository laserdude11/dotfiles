#!/bin/sh
# farm
# Manage a symlink farm. 

# 2015 Laserswald.

usage() {
cat << eof 
usage: $(basename $0) -[dhu] [-S STORAGE_DIR] FILE | DIRECTORY ...
Use symlinks to store files in a target directory.

    -d removes beginning dot from stored file names
       (e.g. links .vimrc to target/vimrc)
    
    -h show this help

    -i installs links from target into current directory. 
    
    -s specify the storage directory. By default, this is the current directory.

    -u unstores the specified files or directories from the target directory,
       moves originals to current directory.
eof
}

bail() {
    echo "$(basename $0): $1"
    exit 1
}

# Set the default farm directory
storagedir=$PWD

while getopts "duhs:i" flag; do 
    case $flag in
        d ) dotfile_mode=1 ;;
        h ) usage && exit 0 ;;
        i ) install_mode=1 ;;
        s ) storagedir=$OPTARG ;;
        u ) unstore=1 ;;
        ? ) usage && exit 1 ;;
    esac
done
shift $(( OPTIND - 1 ))

function target_name {
    local tname=$(basename $1)
    test $dotfile_mode && tname=$(echo $1 | sed "s/^\.//")
    echo $tname
}

function store_file {
    local filename=$1
    storagename=$(target_name $filename)
    mv $filename $storagedir/$storagename
    ln -s $storagedir/$storagename $filename
}

function unstore_file {
    local filename=$1
    storagename=$(target_name $filename)
    rm $filename
    mv $storagedir/$storagename $filename
}

# Taking the stored name of a file, links it to the current directory
function install_file {
    local storagename=$1
    local filename=$storagename
    test $dotfile_mode && filename=".$storagename"
    ln -s $storagedir/$storagename $filename
}

if [[ -z $* ]]; then 
    if [[ $install_mode ]]; then
        for storedfile in $(ls $storagedir) ; do
            install_file $storedfile 
        done
    else 
        usage && exit 1
    fi
fi

for filename in $*; do

    if [ $unstore ]; then
        # Bail if not a link
        test ! -L $filename && bail "$filename is not a link."
        unstore_file $filename
    elif [ $install_mode ]; then 
        install_file $filename
    else
        # check if file is a file or directory
        test -f $filename -o -d $filename -o -L $filename || bail "$filename is not a file or a directory."

        #if it is a symlink already then skip it
        # TODO: Check if the symlink goes to the correct farm
        test -L $filename && continue
        store_file $filename
    fi
done
