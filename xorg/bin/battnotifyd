#!/usr/bin/env chibi-scheme
; vim:ft=scheme

(import (scheme small)
		(scheme list)
		(chibi filesystem)
		(chibi process))

(define *linux-battery-dir* "/sys/class/power_supply")

(define (string-starts-with? str beg)
  (and (> (string-length beg) 3)
	   (equal? (substring beg 0 3) str)))

(define (is-battery? dirname)
  (string-starts-with? dirname "BAT"))

(define (get-batteries)
  (filter 
	is-battery? 
	(directory-files "/sys/class/power_supply")))

(define (read-battery-data battery name)
  (read
	(open-input-file 
	  (string-append *linux-battery-dir* "/" battery "/" name))))

(define (read-capacity battery)
  (read-battery-data battery "capacity"))

(define (read-charge-state battery)
  (symbol->string (read-battery-data battery "status")))

(define (is-charging? battery)
  (string-starts-with? (read-charge-state battery) "Charging"))

(define (has-low-charge? battery)
  (< (read-capacity battery) 15))

(define (sleep n)
  (system "sleep" n))

(define (send-notification batteries)
  (system "notify-send" 
		  "-u" "critical" 
		  "Battery"
		  (fold
			(lambda (battery str)
			  (string-append str " " (number->string (read-capacity battery)) "%"))
			"Plug me in! Batteries are at"
			batteries)))

(define (check-batteries)
  (let ((batteries (get-batteries)))
	(if (and (every has-low-charge? batteries)
			 (not (any is-charging? batteries)))
	  (send-notification batteries))))

(define (main)
  (check-batteries)
  (sleep "10m"))

(main)

